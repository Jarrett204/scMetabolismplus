# 提取通路得分矩阵
pathway_scores <-kk@assays$METABOLISM$score[kk@active.ident==1]
#单细胞加载
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2, method = "AUCell",metabolism.type = "KEGG",Cancer = "KIRC")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#devtools::install_github("Jarrett204/scMetabolismplus",force = TRUE)
library(scMetabolismplus)
library("Matrix")
library(Seurat)
library(rsvd)
library(ggplot2)
library(tibble)
# 提取通路得分矩阵
pathway_scores <-kk@assays$METABOLISM$score[kk@active.ident==1]
#单细胞加载
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2, method = "AUCell",metabolism.type = "KEGG",Cancer = "KIRC")
# 提取通路得分矩阵
pathway_scores <-kk@assays$METABOLISM$score[kk@active.ident==1]
pathway_scores
# 计算通路之间的相关性矩阵
cor_matrix <- cor(t(pathway_scores), use = "pairwise.complete.obs")
cor_df <- as.data.frame(as.table(cor_matrix))
colnames(cor_df) <- c("Pathway1", "Pathway2", "Correlation")
high_cor <- cor_df %>% filter(abs(Correlation) > 0.1 & Pathway1 != Pathway2)
# 构建网络图对象
graph <- graph_from_data_frame(high_cor, directed = FALSE)
# 设置k-core值
k <- 3
k_core <- coreness(graph) >= k
subgraph <- induced_subgraph(graph, k_core)
# 计算每个通路的平均得分
mean_scores <- rowMeans(pathway_scores)
# 提取子图中的节点
subgraph_nodes <- V(subgraph)$name
# 获取子图节点对应的平均得分
subgraph_scores <- log(mean_scores[subgraph_nodes])
# 生成颜色向量
colors <- viridis::viridis(length(subgraph_nodes))
# 绘制网络图
ggraph(subgraph, layout = "fr") +
geom_edge_link(aes(edge_alpha = abs(Correlation)), width = 0.5) +  # 调整线的粗细
geom_node_point(aes(color = subgraph_nodes, size = subgraph_scores)) +  # 调整点的大小
geom_node_text(aes(label = name), repel = TRUE) +
scale_color_manual(values = colors) +
theme_void()
library(igraph)
library(Seurat)
library(dplyr)
library(tidyr)
library(ggraph)
pathway_scores <-kk@assays$METABOLISM$score[kk@active.ident==1]
# 计算通路之间的相关性矩阵
cor_matrix <- cor(t(pathway_scores), use = "pairwise.complete.obs")
cor_df <- as.data.frame(as.table(cor_matrix))
colnames(cor_df) <- c("Pathway1", "Pathway2", "Correlation")
high_cor <- cor_df %>% filter(abs(Correlation) > 0.1 & Pathway1 != Pathway2)
# 构建网络图对象
graph <- graph_from_data_frame(high_cor, directed = FALSE)
# 设置k-core值
k <- 3
k_core <- coreness(graph) >= k
subgraph <- induced_subgraph(graph, k_core)
# 计算每个通路的平均得分
mean_scores <- rowMeans(pathway_scores)
# 提取子图中的节点
subgraph_nodes <- V(subgraph)$name
# 获取子图节点对应的平均得分
subgraph_scores <- log(mean_scores[subgraph_nodes])
# 生成颜色向量
colors <- viridis::viridis(length(subgraph_nodes))
# 绘制网络图
ggraph(subgraph, layout = "fr") +
geom_edge_link(aes(edge_alpha = abs(Correlation)), width = 0.5) +  # 调整线的粗细
geom_node_point(aes(color = subgraph_nodes, size = subgraph_scores)) +  # 调整点的大小
geom_node_text(aes(label = name), repel = TRUE) +
scale_color_manual(values = colors) +
theme_void()
pathway_scores
Seurat
library(Seurat)
pathway_scores.head()
head(pathway_scores)
# 提取通路得分矩阵
pathway_scores <-kk@assays$METABOLISM$score[kk@active.ident==1]
seurat_object <- CreateSeuratObject(counts = pathway_scores)
seurat_object
counts
pathway_scores
seurat_object@meta.data
seurat_path <- CreateSeuratObject(counts = pathway_scores)
seurat_object@meta.data
# 提取通路得分矩阵
pathway_scores <-kk@assays$METABOLISM$score[kk@active.ident==1]
pathway_scores
class(pathway_scores)
seurat_path <- CreateSeuratObject(counts = pathway_scores)
seurat_path
seurat_path@meta.data
seurat_path@meta.data%>%nrow()
pathway_scores
rownames(pathway_scores)
meta_pathway <- rownames(pathway_scores)
seurat_object <- AddMetaData(object = seurat_object, metadata = meta_pathway)
meta_pathway
rlang::last_trace()
meta_pathway
meta_pathway
meta_pathway
seurat_object
pathway_scores
metadata_df <- data.frame(pathway_id = rownames(pathway_scores))
seurat_object <- AddMetaData(object = seurat_object, metadata = meta_pathway)
seurat_object <- AddMetaData(object = seurat_object, metadata = metadata_df)
metadata_df
seurat_object@meta.data
pathway_scores\
pathway_scoree
pathway_scores
# 提取通路得分矩阵
pathway_scores <-kk@assays$METABOLISM$score[kk@active.ident==1]%>%.t()
# 提取通路得分矩阵
pathway_scores <-kk@assays$METABOLISM$score[kk@active.ident==1]%>%t()
pathway_scores
seurat_path
umap(seurat_path)
# 运行UMAP
seurat_path <- RunUMAP(seurat_path)
# 提取通路得分矩阵
pathway_scores <-kk@assays$METABOLISM$score[kk@active.ident==1]%>%t()
seurat_path <- CreateSeuratObject(counts = pathway_scores)
# 运行UMAP
seurat_path <- RunUMAP(seurat_path)
# 标准化数据
seurat_path <- NormalizeData(seurat_path)
# 识别可变基因
seurat_path <- FindVariableFeatures(seurat_path)
# 标准化可变基因数据
seurat_path <- ScaleData(seurat_path)
# 进行PCA降维
seurat_path <- RunPCA(seurat_path, features = VariableFeatures(object = seurat_path))
seurat_path <- CreateSeuratObject(counts = pathway_scores)
# 运行UMAP
seurat_path <- RunUMAP(seurat_path)
# 使用PCA结果进行UMAP降维
seurat_path <- RunUMAP(seurat_path, dims = 1:10)
# 进行PCA降维
seurat_path <- RunPCA(seurat_path, features = VariableFeatures(object = seurat_path))
# 进行UMAP降维，不进行标准化和PCA
seurat_path <- RunUMAP(seurat_path, assay = "RNA")
# 进行UMAP降维，不进行标准化和PCA
seurat_path <- RunUMAP(seurat_path, assay = "RNA")
# 直接进行UMAP降维
seurat_path <- RunUMAP(seurat_path, features = rownames(seurat_path))
rownames(seurat_path)
seurat_path <- RunUMAP(seurat_path, assay = "RNA", features = rownames(seurat_path@assays$RNA@data))
version(Seurat)
versions(Seurat)
seurat_path
seurat_path@assays
seurat_path@assays$RNA
seurat_path@version
# 使用devtools安装指定版本的Seurat
devtools::install_version("Seurat", version = "4.9.0", repos = "http://cran.us.r-project.org")
remotes::install_version("Seurat", "4.4.0", repos = c("https://satijalab.r-universe.dev", getOption("repos")))
remotes::install_version("Seurat", "4.4.0", repos = c("https://satijalab.r-universe.dev", getOption("repos")))
# 强制卸载Seurat
remove.packages("Seurat", lib = "D:/Softwares/R-4.3.2/library")
# 检查是否成功删除
if("Seurat" %in% installed.packages()) {
stop("Seurat package is still installed")
}
seurat_path <- CreateSeuratObject(counts = pathway_scores)
library(Seurat)
gg_table
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
library("Matrix")
library(Seurat)
library(rsvd)
library(ggplot2)
library(tibble)
library(igraph)
library(Seurat)
library(ggsci)
library(dplyr)
library(tidyr)
library(ggraph)
Singlecell <- readRDS('../AB.rds')
Singlecell2 <- Singlecell[1:100]
input_pathway=read.csv('./data/KEGG_path.csv')$Pathway%>%unique()
file.path(output_dir, "total_umap_plot.pdf")
file.path("asd", "total_umap_plot.pdf")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
library(scMetabolismplus)
library("Matrix")
library(Seurat)
library(rsvd)
library(ggplot2)
library(tibble)
library(igraph)
library(Seurat)
library(ggsci)
library(dplyr)
library(tidyr)
library(ggraph)
Singlecell <- readRDS('../AB.rds')
Singlecell2 <- Singlecell[1:100]
input_pathway=read.csv('./data/KEGG_path.csv')$Pathway%>%unique()
input_pathway=read.csv('./data/KEGG_all.csv')$Pathway%>%unique()
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2, method = "AUCell",metabolism.type = "KEGG",Cancer = "KIRC")
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2, method = "AUCell",metabolism.type = "KEGG",Cancer = "KIRC")
Singlecell2 <- Singlecell
input_pathway=read.csv('./data/KEGG_all.csv')$Pathway%>%unique()
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2, method = "AUCell",metabolism.type = "KEGG",Cancer = "KIRC")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
tt <- DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
#DimPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DimPlot.metabolism(kk,pathway=input_pathway,dimention.reduction.run = F)
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway = tt$pathway, phenotype = "seurat_clusters", ncol = 4)
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway = tt$pathway, phenotype = "seurat_clusters", ncol = 4)
#devtools::document("D:/NAR/scMetabolismplus/")
#file_path <- system.file("data", "KEGG_metabolism_nc.gmt", package = "scMetabolismplus")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway = tt$pathway, phenotype = "seurat_clusters", ncol = 4)
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#file_path <- system.file("data", "KEGG_metabolism_nc.gmt", package = "scMetabolismplus")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#file_path <- system.file("data", "KEGG_metabolism_nc.gmt", package = "scMetabolismplus")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
output_dir
paste0("./",unique(kk@meta.data$Cancer),"_",unique(kk@meta.data$dataset),"Dptlot")
getwd()
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2,imputation=T, method = "AUCell",metabolism.type = "KEGG",Cancer = "KIRC")
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
DimPlot.metabolism <- function(obj, pathway, dimention.reduction.type = "umap", dimention.reduction.run = T, size= 0.25){
cat("Establishing connection\n\n")
library(wesanderson)
library(ggplot2)
library(progress)
base_colors <- c("#4D457E", "#CD506B", "#E9DF45")
# 创建渐变色调色板函数
pal <- colorRampPalette(base_colors)(100)
# Initialize progress bar with total steps
total_steps <- length(pathway) * 2  # One for creating data, one for plotting
pb <- progress_bar$new(
format = "  Processing [:bar] :percent eta: :eta",
total = total_steps, clear = FALSE, width = 60
)
# umap
if (dimention.reduction.type == "umap"){
if (dimention.reduction.run == T) obj <- Seurat::RunUMAP(obj, reduction = "pca", dims = 1:40)
umap.loc <- obj@reductions$umap@cell.embeddings
row.names(umap.loc) <- colnames(obj)
signature_exp <- obj@assays$METABOLISM$score
signature_ggplot2 <- data.frame()
for (input.pathway in pathway) {
signature_ggplot <- data.frame(umap.loc, Pathway = input.pathway, Score = unlist(signature_exp[input.pathway, , drop = T]))
if(input.pathway == pathway[1]){
signature_ggplot2 <- signature_ggplot
} else {
signature_ggplot2 <- rbind(signature_ggplot2, signature_ggplot)
}
pb$tick()  # Update progress bar after data processing
}
output_dir <- paste0("./", unique(obj@meta.data$Cancer), "_", unique(obj@meta.data$dataset), "Dimplot")
dir.create(output_dir, showWarnings = FALSE)
for (input.pathway in pathway) {
pathway_data <- subset(signature_ggplot2, Pathway == input.pathway)
plot <- ggplot(data = pathway_data, aes(x = UMAP_1, y = UMAP_2, color = Score)) +
geom_point(size = 3) +
scale_color_gradientn(colours = pal) +
xlab("UMAP 1") + ylab("UMAP 2") +
ggtitle(paste("Pathway:", input.pathway)) +
theme_bw()
ggsave(filename = paste0(output_dir, "/", "plot_", input.pathway, ".png"), plot = plot, width = 6, height = 5)
pb$tick()  # Update progress bar after plotting
}
print(plot)  # 打印或保存plot
}
# tsne
if (dimention.reduction.type == "tsne"){
if (dimention.reduction.run == T) obj <- Seurat::RunTSNE(obj, reduction = "pca", dims = 1:40)
tsne.loc <- obj@reductions$tsne@cell.embeddings
row.names(tsne.loc) <- colnames(obj)
signature_exp <- obj@assays$METABOLISM$score
signature_ggplot2 <- data.frame()
for (input.pathway in pathway) {
signature_ggplot <- data.frame(tsne.loc, Pathway = input.pathway, Score = unlist(signature_exp[input.pathway, , drop = T]))
if(input.pathway == pathway[1]){
signature_ggplot2 <- signature_ggplot
} else {
signature_ggplot2 <- rbind(signature_ggplot2, signature_ggplot)
}
pb$tick()  # Update progress bar after data processing
}
output_dir <- paste0("./", unique(obj@meta.data$Cancer), "_", unique(obj@meta.data$dataset), "Dimplot")
dir.create(output_dir, showWarnings = FALSE)
for (input.pathway in pathway) {
pathway_data <- subset(signature_ggplot2, Pathway == input.pathway)
plot <- ggplot(data = pathway_data, aes(x = UMAP_1, y = UMAP_2, color = Score)) +
geom_point(size = 3) +
scale_color_gradientn(colours = pal) +
xlab("UMAP 1") + ylab("UMAP 2") +
ggtitle(paste("Pathway:", input.pathway)) +
theme_bw()
ggsave(filename = paste0(output_dir, "/", "plot_", input.pathway, ".png"), plot = plot, width = 6, height = 5)
pb$tick()  # Update progress bar after plotting
}
}
plot
}
#DimPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DimPlot.metabolism(kk,pathway=input_pathway,dimention.reduction.run = F)
#DimPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DimPlot.metabolism(kk,pathway=input_pathway,dimention.reduction.run = F)
input_pathway
input_pathway=read.csv('./data/KEGG_path.csv')$Pathway%>%unique()
TT<-system.file("data/",paste0(database," ALL.csv"),package ="scMetabolismplus")#手动找-下通路
input.pathway=read.csv(TT)%>%dplyr::filter(cancer_type==cancer)%>%.$Pathway%>%unique()#加载所有的pathway;方便统一展示
TT<-system.file("data/",paste0(database," ALL.csv"),package ="scMetabolismplus")#手动找-下通路
database= G0ancer="BRCA"
database= "G0"
Cancer="BRCA"
TT<-system.file("data/",paste0(database," ALL.csv"),package ="scMetabolismplus")#手动找-下通路
input.pathway=read.csv(TT)%>%dplyr::filter(cancer_type==cancer)%>%.$Pathway%>%unique()#加载所有的pathway;方便统一展示
TT
input_pathway=read.csv('./data/GO_ALL.csv')$Pathway%>%unique()
input_pathway
input_pathway=read.csv('./data/GO_ALL.csv')$Pathway%>%unique()
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
#DimPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DimPlot.metabolism(kk,pathway=input_pathway,dimention.reduction.run = F)
input_pathway
input_pathway=read.csv('./data/GO_ALL.csv')$Pathway%>%unique()
input_pathway
#DimPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DimPlot.metabolism(kk,pathway=input_pathway,dimention.reduction.run = F)
kk
kk@assays
kk@assays$METABOLISM
kk@assays$score
kk@assays$METABOLISM$score
kk@assays$METABOLISM$score%>%head(c(4,4))
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway = tt$pathway, phenotype = "seurat_clusters", ncol = 4)
#通路的UMAP降维图，某个癌的某个算法，结果会出现在同一个文件夹里，附带所有通路评分
PathUmp.metabolism(kk, threshold = 3, top_n = 5)
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
tt <- DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
Singlecell2 <- Singlecell[1:50]
Singlecell2
Singlecell2 <- Singlecell[,1:50]
Singlecell2
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2,imputation=T, method = "AUCell",metabolism.type = "KEGG",Cancer = "KIRC")
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2,imputation=T, method = "AUCell",metabolism.type = "KEGG",Cancer = "KIRC")
Singlecell2 <- Singlecell[1:50,]
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2,imputation=T, method = "AUCell",metabolism.type = "KEGG",Cancer = "KIRC")
Singlecell2 <- Singlecell
Cancer="KIRC"
Cancer="KIRC"
input_pathway=read.csv('./data/GO_ALL.csv')$Pathway%>%unique()
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2,imputation=T, method = "AUCell",metabolism.type = "KEGG",Cancer =Cancer)
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
tt <- DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
input_pathway=read.csv('./data/KEGG_ALL.csv')$Pathway%>%unique()
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
tt <- DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
#DimPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DimPlot.metabolism(kk,pathway=input_pathway,dimention.reduction.run = F)
#DimPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DimPlot.metabolism(kk,pathway=tt$input_pathway,dimention.reduction.run = F)
tt$input_pathway
tt$pathway
#DimPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DimPlot.metabolism(kk,pathway=tt$pathway,dimention.reduction.run = F)
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway = input_pathway, phenotype = "seurat_clusters", ncol = 4)
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway =tt$pathway, phenotype = "seurat_clusters", ncol = 4)
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway =tt$pathway, phenotype = "seurat_clusters", ncol = 4)
pal_aaas()
pal_aaas()(9)
pal_aaas()(10)
pal_aaas()(11)
pal_frontiers()(10)
show_col(pal_frontiers()(10))
library(scale)
library(scales)
show_col(pal_frontiers()(10))
pal_frontiers()(10)
colors <- pal_jama()(10)+pal_aaas()(10)+pal_frontiers()(10)
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway =tt$pathway, phenotype = "seurat_clusters", ncol = 4)
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway =tt$pathway, phenotype = "seurat_clusters", ncol = 4)
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway =tt$pathway, phenotype = "seurat_clusters", ncol = 4)
#通路的UMAP降维图，某个癌的某个算法，结果会出现在同一个文件夹里，附带所有通路评分
PathUmp.metabolism(kk, threshold = 3, top_n = 5)
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
obj=kk
pathway =tt$pathway
phenotype = "seurat_clusters"
ncol = 4
pal_npg()(10)
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#file_path <- system.file("data", "KEGG_metabolism_nc.gmt", package = "scMetabolismplus")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
#file_path <- system.file("data", "KEGG_metabolism_nc.gmt", package = "scMetabolismplus")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
Singlecell <- readRDS('../AB.rds')
Singlecell2 <- Singlecell
input_pathway=read.csv('./data/KEGG_ALL.csv')$Pathway%>%unique()
#input_pathway=read.csv('./data/reactome和除去DriverDB(1).csv')$Pathway%>%unique()
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2,imputation=F, method = "AUCell",metabolism.type = "KEGG",Cancer =Cancer)
Cancer="KIRC"
input_pathway=read.csv('./data/KEGG_ALL.csv')$Pathway%>%unique()
#单细胞加载#phenotype是用什么metadata比如注释后的结果
kk <- scMetabolismplus::sc.metabolism.Seurat.pathway(Singlecell2,imputation=F, method = "AUCell",metabolism.type = "KEGG",Cancer =Cancer)
#DotPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
tt <- DotPlot.metabolism(kk,pathway=input_pathway,phenotype = "seurat_clusters", norm = "y")
#DimPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
DimPlot.metabolism(kk,pathway=tt$pathway,dimention.reduction.run = F)
#BoxPlot绘制某个癌的某个算法，结果会出现在同一个文件夹里
BoxPlot.metabolism(obj = kk, pathway =tt$pathway, phenotype = "seurat_clusters")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
BoxPlot.metabolism(obj = kk, pathway =tt$pathway, phenotype = "seurat_clusters")
#通路的UMAP降维图，某个癌的某个算法，结果会出现在同一个文件夹里，附带所有通路评分
PathUmp.metabolism(kk, threshold = 3, top_n = 5,phenotype = "seurat_clusters")
