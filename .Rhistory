# Filter the genes for this pathway
genes <- df %>%
filter(pathway == pathway) %>%
pull(driver_gene)}
df
unique(df$pathway)
genes <- df %>%
filter(pathway == pathway) %>%
pull(driver_gene)
genes
unique(df$pathway) %>%
walk(function(pathway) {
# Filter the genes for this pathway
genes <- df %>%
filter(pathway == pathway) %>%
pull(driver_gene)
# Prepare the line to be written: pathway, NA (for description, as it's optional), and genes
line <- paste(c(pathway, "NA", genes), collapse = "\t")
# Write the line to the file
writeLines(line, con)
}
unique(df$pathway) %>%
unique(df$pathway) %>%
walk(function(pathway) {
# Filter the genes for this pathway
genes <- df %>%
filter(pathway == pathway) %>%
pull(driver_gene)
# Prepare the line to be written: pathway, NA (for description, as it's optional), and genes
line <- paste(c(pathway, "NA", genes), collapse = "\t")
# Write the line to the file
writeLines(line, con)
})
unique(df$pathway) %>%
walk(function(pathway) {
# Filter the genes for this pathway
genes <- df %>%
filter(pathway == pathway) %>%
pull(driver_gene)
})
df
df <- data %>%
split(.$cancer_type)
df
df <- data %>%
split(.$cancer_type)
imap(function(df, name) {
# Construct the file name
file_name <- paste0(output_dir, name, ".gmt")
# Open a connection to the file
con <- file(file_name, "w")
# Loop through each pathway within the cancer type
unique(df$pathway) %>%
walk(function(pathway) {
# Filter the genes for this pathway
genes <- df %>%
filter(pathway == pathway) %>%
pull(driver_gene)
# Prepare the line to be written: pathway, NA (for description, as it's optional), and genes
line <- paste(c(pathway, genes), collapse = "\t")
# Write the line to the file
writeLines(line, con)
})
# Close the connection
close(con)
})
df
# Generate a GMT file for each cancer type
data %>%
split(.$cancer_type) %>%
imap(function(df, name) {
# Construct the file name
file_name <- paste0(output_dir, name, ".gmt")
# Open a connection to the file
con <- file(file_name, "w")
# Loop through each pathway within the cancer type
unique(df$pathway) %>%
walk(function(pathway) {
# Filter the genes for this pathway
genes <- df %>%
filter(pathway == pathway) %>%
pull(driver_gene)
# Prepare the line to be written: pathway, NA (for description, as it's optional), and genes
line <- paste(c(pathway, "NA", genes), collapse = "\t")
# Write the line to the file
writeLines(line, con)
})
# Close the connection
close(con)
})
# Generate a GMT file for each cancer type
data %>%
split(.$cancer_type) %>%
imap(function(df, name) {
# Construct the file name
file_name <- paste0(output_dir, name, ".gmt")
# Open a connection to the file
con <- file(file_name, "w")
# Loop through each pathway within the cancer type
unique(df$pathway) %>%
walk(function(pathway) {
# Filter the genes for this pathway
genes <- df %>%
filter(pathway == pathway) %>%
pull(driver_gene)
# Prepare the line to be written: pathway, NA (for description, as it's optional), and genes
line <- paste(c(pathway, genes), collapse = "\t")
# Write the line to the file
writeLines(line, con)
})
# Close the connection
close(con)
})
df
df <- df$WY
DF
DF
DF
df
df$COAD
DF
df
df$BRCA
DF
data %>%
split(.$cancer_type)
data %>%
split(.$cancer_type) ->Df
df
FD
DF
DF
DF
data %>%
split(.$cancer_type) ->df
df
df <- df$BRCA
DF
Df
df
# Generate a GMT file for each cancer type
df <- data %>%
split(.$cancer_type)
df
df %>%
group_by(cancer_type, pathway)
data
data %>%
group_by(cancer_type, pathway)
# 按癌症类型分割数据并转换为GMT格式
data %>%
group_by(cancer_type, pathway) %>%
summarise(genes = paste(unique(driver_gene), collapse = "\t"), .groups = "drop") %>%
group_by(cancer_type)
# 按癌症类型分割数据并转换为GMT格式
data %>%
group_by(cancer_type, pathway) %>%
summarise(genes = paste(unique(driver_gene), collapse = "\t"), .groups = "drop") %>%
group_by(cancer_type) %>%
do({
# 为每种癌症创建一个GMT文件
filepath <- paste0("./data/KEGG/".$cancer_type[1], ".gmt")
filepath <- paste0("./data/KEGG/".$cancer_type[1], ".gmt")
# 按癌症类型分割数据并转换为GMT格式
data %>%
group_by(cancer_type, pathway) %>%
summarise(genes = paste(unique(driver_gene), collapse = "\t"), .groups = "drop") %>%
group_by(cancer_type) %>%
do({
# 为每种癌症创建一个GMT文件
filepath <- paste0("./data/KEGG/",.$cancer_type[1], ".gmt")
write.table(.[, c("pathway", "genes")],
file = filepath,
row.names = FALSE,
col.names = FALSE,
quote = FALSE,
sep = "\t")
})
data %>%
group_by(cancer_type, pathway) %>%
summarise(genes = paste(unique(driver_gene), collapse = "\t"), .groups = "drop") %>%
group_by(cancer_type) %>%
do({
# 为每种癌症创建一个GMT文件
filepath <- paste0("./data/KEGG/",.$cancer_type[1], ".gmt")
write.table(.[, c("pathway", "genes")],
file = filepath,
row.names = FALSE,
col.names = FALSE,
quote = FALSE,
sep = "\t")
})
rlang::last_trace()
system.file("data/KEGG/", paste0(Cancer,".gmt"))
Cancer="BRCA"
paste0(Cancer,".gmt")
system.file("data/KEGG/", paste0(Cancer,".gmt")
)
system.file("data/KEGG/", paste0(Cancer,".gmt"), package = "scMetabolismplus")
devtools::build("D:/NAR/scMetabolismplus/")
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="LAML")
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell")
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Glycolysis / Gluconeogenesis", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Fattyaciddegradation/hsa00071", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
sc.metabolism.Seurat <- function(obj, method = "ssGSEA", imputation = F, ncores = 2,Cancer="BRCA", metabolism.type = "KEGG") {
countexp<-obj@assays$RNA@counts
countexp<-data.frame(as.matrix(countexp))
#signatures_KEGG_metab <- "./data/KEGG_metabolism_nc.gmt"
#signatures_REACTOME_metab <- "./data/REACTOME_metabolism.gmt"
signatures_KEGG_metab <- system.file("data/KEGG/", paste0(Cancer,".gmt"), package = "scMetabolismplus")
signatures_REACTOME_metab <- system.file("data", "REACTOME_metabolism.gmt", package = "scMetabolismplus")
if (metabolism.type == "KEGG")  {gmtFile<-signatures_KEGG_metab; cat("Your choice is: KEGG\n")}
if (metabolism.type == "REACTOME")  {gmtFile<-signatures_REACTOME_metab; cat("Your choice is: REACTOME\n")}
#imputation
if (imputation == F) {
countexp2<-countexp
}
if (imputation == T) {
cat("Start imputation...\n")
#Citation: George C. Linderman, Jun Zhao, Yuval Kluger. Zero-preserving imputation of scRNA-seq data using low-rank approximation. bioRxiv. doi: https://doi.org/10.1101/397588
#Github: https://github.com/KlugerLab/ALRA
cat("Citation: George C. Linderman, Jun Zhao, Yuval Kluger. Zero-preserving imputation of scRNA-seq data using low-rank approximation. bioRxiv. doi: https://doi.org/10.1101/397588 \n")
result.completed <- alra(as.matrix(countexp))
countexp2 <- result.completed[[3]]; row.names(countexp2) <- row.names(countexp)
}
#signature method
cat("Start quantify the metabolism activity...\n")
#VISION 暂时看不好使
#if (method == "VISION") {
#  library(VISION)
#  n.umi <- colSums(countexp2)
#  scaled_counts <- t(t(countexp2) / n.umi) * median(n.umi)
#  vis <- Vision(scaled_counts, signatures = gmtFile)
#  options(mc.cores = ncores)
#  vis <- analyze(vis)
# signature_exp<-data.frame(t(vis@SigScores))
#}
#AUCell
if (method == "AUCell") {
library(AUCell)
library(GSEABase)
cells_rankings <- AUCell_buildRankings(as.matrix(countexp2), nCores=ncores, plotStats=F) #rank
geneSets <- getGmt(gmtFile) #signature read
cells_AUC <- AUCell_calcAUC(geneSets, cells_rankings) #calc
signature_exp <- data.frame(getAUC(cells_AUC))
}
#ssGSEA
if (method == "ssGSEA") {
library(GSVA)
library(GSEABase)
geneSets <- getGmt(gmtFile) #signature read
gsva_es <- gsva(as.matrix(countexp2), geneSets, method=c("ssgsea"), kcdf=c("Poisson"), parallel.sz=ncores) #
signature_exp<-data.frame(gsva_es)
}
#GSVA
if (method == "ssGSEA") {
library(GSVA)
library(GSEABase)
geneSets <- getGmt(gmtFile) #signature read
gsva_es <- gsva(as.matrix(countexp2), geneSets, method=c("gsva"), kcdf=c("Poisson"), parallel.sz=ncores) #
signature_exp<-data.frame(gsva_es)
}
cat("\nPlease Cite: \nYingcheng Wu, Qiang Gao, et al. Cancer Discovery. 2021. \nhttps://pubmed.ncbi.nlm.nih.gov/34417225/   \n\n")
obj@assays$METABOLISM$score<-signature_exp
obj
}
signatures_KEGG_metab <- system.file("data/KEGG/", paste0(Cancer,".gmt"), package = "scMetabolismplus")
signatures_KEGG_metab
gmtFile<-signatures_KEGG_metab
gmtFile
getGmt(gmtFile)
cells_rankings <- AUCell_buildRankings(as.matrix(countexp2), nCores=ncores, plotStats=F) #rank
geneSets <- getGmt(gmtFile) #signature read
cells_AUC <- AUCell_calcAUC(geneSets, cells_rankings) #calc
signature_exp <- data.frame(getAUC(cells_AUC))
signature_exp
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
devtools::build("D:/NAR/scMetabolismplus/")
library(scMetabolismplus)
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
devtools::build("D:/NAR/scMetabolismplus/")
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
library(scMetabolismplus)
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
devtools::install("D:/NAR/scMetabolismplus/")
library(scMetabolismplus)
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Fattyaciddegradation/hsa00071", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F)
View(Singlecell_Al)
View(Singlecell_meta)
View(Singlecell_meta)
Singlecell_meta@assays[["METABOLISM"]][["score"]]、
Singlecell_meta@assays[["METABOLISM"]][["score"]]
Singlecell_meta@assays[["METABOLISM"]]
Singlecell_meta@assays[["METABOLISM"]]%>%rownames()
Singlecell_meta@assays[["METABOLISM"]]%>%names
Singlecell_meta@assays[["METABOLISM"]]%>%names()
rownames(Singlecell_meta@assays[["METABOLISM"]])
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
obj <- Singlecell_meta
metadata<-obj@meta.data
metadata
metabolism.matrix <- obj@assays$METABOLISM$score
metabolism.matrix
metadata[,input.parameter]<-as.character(metadata[,input.parameter])
obj
pathway="Cysteineandmethioninemetabolism/hsa00270"
dimention.reduction.type = "umap"
dimention.reduction.run = T
size= 1
#umap
if (dimention.reduction.type == "umap"){
if (dimention.reduction.run == T) obj <- Seurat::RunUMAP(obj, reduction = "pca", dims = 1:40)
umap.loc<-obj@reductions$umap@cell.embeddings
row.names(umap.loc)<-colnames(obj)
signature_exp<-obj@assays$METABOLISM$score
input.pathway <- pathway
signature_ggplot<-data.frame(umap.loc, t(signature_exp[input.pathway,]))
library(wesanderson)
pal <- wes_palette("Zissou1", 100, type = "continuous")
library(ggplot2)
plot <- ggplot(data=signature_ggplot, aes(x=UMAP_1, y=UMAP_2, color = signature_ggplot[,3])) +  #this plot is great
geom_point(size = size) +
scale_fill_gradientn(colours = pal) +
scale_color_gradientn(colours = pal) +
labs(color = input.pathway) +
#xlim(0, 2)+ ylim(0, 2)+
xlab("UMAP 1") +ylab("UMAP 2") +
theme(aspect.ratio=1)+
#theme_bw()
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
}
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
signature_exp
t(signature_exp[input.pathway,]
t(signature_exp[input.pathway,])
input.pathway="Cysteineandmethioninemetabolism/hsa00270"
umap.loc
if (dimention.reduction.run == T) obj <- Seurat::RunUMAP(obj, reduction = "pca", dims = 1:40)
obj
View(obj)
obj@assays
Seurat::RunUMAP(obj, reduction = "pca", dims = 1:40)
obj@reductions[["umap"]]
Singlecell_Al <- readRDS('../AB.rds')
Singlecell <- Singlecell[,1:1000]
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell <- Singlecell[,1:3000]
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
dev.off()
Singlecell_Al <- readRDS('../AB.rds')
Singlecell <- Singlecell[,1:3000]
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell <- Singlecell[,1:1000]
Singlecell_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al <- Singlecell_Al[,1:1000]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al <- Singlecell_Al[,1:3000]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Cysteineandmethioninemetabolism/hsa00270", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Oxidativephosphorylation/hsa00190", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Oxidativephosphorylation/hsa00190", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- Singlecell_Al[,1:1000]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- Singlecell_Al[,1:2000]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al <- Singlecell_Al[,1:4000]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al <- Singlecell_Al[,1:500]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al <- Singlecell_Al[,1:2000]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- Singlecell_Al[,1:500]
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al <- Singlecell_Al[,1:5000]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al <- Singlecell_Al[,1:10000]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_Al <- Singlecell_Al[,1:40000]
Singlecell_Al <- readRDS('../AB.rds')
Singlecell_Al <- Singlecell_Al[,1:40000]
Singlecell_Al_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_Al,method =="AUCell",Cancer="LAML")
DimPlot.metabolism(obj = Singlecell_Al_meta, pathway = "Etherlipidmetabolism/hsa00565", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_BRCA <- readRDS('../AB.rds')
Singlecell_BRCA <- Singlecell_Al[,1:5000]
Singlecell_BRCA_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_BRCA,method =="AUCell",Cancer="LAML")
Singlecell_BRCA_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_BRCA,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_BRCA_meta, pathway = "Oxidativephosphorylation/hsa00190", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_BRCA <- readRDS('../AB.rds')
Singlecell_BRCA <- Singlecell_BRCA[,1:5000]
Singlecell_BRCA_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_BRCA,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_BRCA_meta, pathway = "Oxidativephosphorylation/hsa00190", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_BRCA <- readRDS('../BRCA.rds')
Singlecell_BRCA <- Singlecell_BRCA[,1:5000]
Singlecell_BRCA_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_BRCA,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_BRCA_meta, pathway = "Oxidativephosphorylation/hsa00190", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_BLCA <- readRDS('../BLCA.rds')
Singlecell_BLCA <- Singlecell_BLCA[,1:5000]
Singlecell_BLCA_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_BLCA,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_BLCA_meta, pathway = "Oxidativephosphorylation/hsa00190", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
Singlecell_BLCA <- readRDS('../BLCA.rds')
Singlecell_BLCA <- Singlecell_BLCA[,1:3000]
Singlecell_BLCA_meta <- scMetabolismplus::sc.metabolism.Seurat(Singlecell_BLCA,method =="AUCell",Cancer="BRCA")
DimPlot.metabolism(obj = Singlecell_BLCA_meta, pathway = "Oxidativephosphorylation/hsa00190", dimention.reduction.type = "umap", dimention.reduction.run = F, size = 1)
View(Singlecell_BRCA)
Singlecell_BRCA@images
DimPlot("Singlecell_BRCA",reduction="tsne")
library(Seurat)
DimPlot("Singlecell_BRCA",reduction="tsne")
DimPlot(Singlecell_BRCA,reduction="tsne")
DimPlot(Singlecell_BRCA,reduction="umpa")
DimPlot("Singlecell_BRCA",reduction="umap")
DimPlot(Singlecell_BRCA,reduction="umap")
library(tidyverse)
# Load the data
data <- read.csv("./data/HMDB和除去DriverDB.csv") # Make sure to replace the path with your actual data file location
library(dplyr)
# Normalize column names for easier handling
data <- data %>%rename(
driver_gene = Gene, # Replace 'driver_gene' with the actual column name in your file if different
Pathway = Pathway, # Same here, replace 'Pathway' with your column name
Cancer_type = Cancer_type # And replace 'Cancer_type' with your column name
)
# Define the output directory where the GMT files will be saved
output_dir <- "./data/HMDB/" # Change this to your desired output directory
# Process the data for each cancer type
library(dplyr)
df <- data
# Assuming df is your data frame
# Group by Cancer_type and Pathway, then summarise
df_grouped <- df %>%
group_by(Cancer_type, Pathway) %>%
summarise(genes = paste(unique(driver_gene), collapse = "\t"), .groups = "drop")
# Split the data frame by Cancer_type
df_split <- split(df_grouped, df_grouped$Cancer_type)
# Use lapply to iterate over the list and create a GMT file for each cancer type
lapply(names(df_split), function(cancer_type) {
filepath <- paste0(output_dir,cancer_type, ".gmt")
write.table(df_split[[cancer_type]][, c("Pathway", "genes")],
file = filepath,
row.names = FALSE,
col.names = FALSE,
quote = FALSE,
sep = "\t")
})
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
library(scMetabolismplus)
Singlecell <- readRDS('../AB.rds')
Singlecell2 <- Singlecell[,1:1000]
#单细胞加载
kk <- scMetabolismplus::sc.metabolism.Seurat(Singlecell, method = "AUCell",metabolism.type = "Reactome",Cancer = "KIRC")
Singlecell <- readRDS('../AB.rds')
Singlecell2 <- Singlecell[,1:1000]
#单细胞加载
kk <- scMetabolismplus::sc.metabolism.Seurat(Singlecell, method = "AUCell",metabolism.type = "Reactome",Cancer = "KIRC")
devtools::build("D:/NAR/scMetabolismplus/")
devtools::check("D:/NAR/scMetabolismplus/")
library(scMetabolismplus)
library(scMetabolismplus)
#单细胞加载
kk <- scMetabolismplus::sc.metabolism.Seurat(Singlecell2, method = "AUCell",metabolism.type = "Reactome",Cancer = "KIRC")
Cancer='BRCA'
signatures_GO_metab <- system.file("data/GO/", paste0(Cancer,".gmt"), package = "scMetabolismplus")
signatures_GO_metab
metabolism.type="GO"
if (metabolism.type == "GO")  {gmtFile<-signatures_GO_metab; cat("Your choice is: GO\n")}
gmtFile
getGmt(gmtFile) #
library(rsvd)
devtools::build("D:/NAR/scMetabolismplus/")
library(scMetabolismplus)
#单细胞加载
kk <- scMetabolismplus::sc.metabolism.Seurat(Singlecell2, method = "AUCell",metabolism.type = "Reactome",Cancer = "KIRC")
devtools::install("D:/NAR/scMetabolismplus/")
library(scMetabolismplus)
kk <- scMetabolismplus::sc.metabolism.Seurat(Singlecell2, method = "AUCell",metabolism.type = "Reactome",Cancer = "BRCA")
